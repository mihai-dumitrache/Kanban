@using Kanban.Models.ViewModels
@using Microsoft.AspNetCore.Http
@using Kanban.Services
@inject Kanban.Services.Interfaces.IBoardServices _boardService
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model BoardViewModel

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Kanban</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
</head>

<script src="https://kit.fontawesome.com/d5cb6dbe34.js" crossorigin="anonymous"></script>
@{
    ViewData["Title"] = "Board";
}
<h1>@ViewData["Title"]</h1>




@*<form action="action_page.php">*@
@*action=nume metoda din controller*@
<form asp-action="AddBoard" method="post">
    <div class="container">

        <h1>Add new project</h1>
        <p>Please fill in this form to create a new Board</p>
        <hr>

        <div class="form-group">
        <label asp-for="Title" class="control-label"><b>Project Name</b></label>
        <input asp-for="Title" class="form-control" type="text" placeholder="Enter project name" id="project" /> <br />
            <div class="has-error">
                @Html.ValidationMessage("NoBoardName")
            </div>
        </div>

        <div class="form-group">
        <label asp-for="Status"><b>Project status</b></label>
        <select asp-for="Status" id="Status">
            <option value="" selected disabled hidden>Choose status</option>
            <option value="InWork">In Work</option>
            <option value="OnHold">On Hold</option>
            <option value="Closed">Closed</option>
        </select> <br />
        </div>

        <div class="form-group">
        <label asp-for="Description" class="control-label"><b>Insert Description</b></label>
        <input asp-for="Description" class="form-control" type="text" placeholder="Insert Description" id="txtDescription" />
        <br />
        </div>
  
        <input asp-for="taskStatuses" type="hidden" id="taskStatusesArray[]"/>

        <input type="text" class="form-control" id="taskStatuses" name="taskStatuses" style="width:20%; display:inline-block" placeholder="Insert Task Status">  <i class="fa-solid fa-circle-plus fa-xl" style="display:inline-block;" type="button" onclick="addTaskStatus()"></i><br />
        
        <div id="container"></div>
        
        <button type="submit" class="btn btn-default add-button" id="addButton">Add board</button>

    </div>


</form>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script type="text/javascript"></script>

<script>
    function populateWithDefaultStatuses()
    {
        debugger;
        const defaultTaskStatuses=[];
        $.ajax({
                url: '@Url.Action("GetDefaultTaskStatuses", "Board")',
                type: "Get",
                dataType: 'json',
                async: false,
                success: function (data) {
                        $.each(data,function(index){
                        defaultTaskStatuses[index]=data[index].statusName;
                    })
                },
                failure: function (errMsg) {
                alert(errMsg);
                }
            });
    
    return defaultTaskStatuses;
        
    };
</script>

<script>
    debugger;
    var taskStatusesLength=0;
    var taskStatuses=[];
    taskStatuses=populateWithDefaultStatuses();
    for (var taskIndex=1;taskIndex<=taskStatuses.length;taskIndex++)
    {
            var labelTitle=taskIndex;
            var node=document.createElement('div');
            node.id='status'+taskIndex;
            node.innerHTML = '<i class="fa-regular fa-circle-xmark" id="button' +taskIndex+ '" type="button" onclick="deleteTaskStatus('+taskIndex+')"></i><label id="label' + taskIndex + '" name="label' + taskIndex + '">'+ '\xa0\xa0\xa0' + taskStatuses[taskIndex-1] +'</label>';       
            document.getElementById('container').appendChild(node); 
    };

    document.getElementById("taskStatusesArray[]").value=taskStatuses;

    function addTaskStatus(){
        debugger;
        
        if (document.getElementById("taskStatuses").value!='')
        {
            taskStatusesLength=taskStatuses.length+1;
            taskStatuses.push(document.getElementById("taskStatuses").value);
            var labelTitle=document.getElementById("taskStatuses").value;
            var node=document.createElement('div');
            node.id='status'+taskStatusesLength;
            node.innerHTML = '<i class="fa-regular fa-circle-xmark" id="button' +taskStatusesLength+ '" type="button" onclick="deleteTaskStatus('+taskStatusesLength+')"></i><label id="label' + taskStatusesLength + '" name="label' + taskStatusesLength + '">'+ '\xa0\xa0\xa0' + document.getElementById("taskStatuses").value +'</label>';       
            document.getElementById('container').appendChild(node); 
            document.getElementById("taskStatusesArray[]").value=taskStatuses;
        };
        
    };
  
</script>

<script>
    function deleteTaskStatus(taskStatusesLength)
    {
        debugger;
        var labelName='label'+taskStatusesLength;
        var buttonName='button'+taskStatusesLength;
        var divName='status'+taskStatusesLength;
        
        
        if (taskStatusesLength==1 && taskStatuses.length==1){
            document.getElementById(divName).remove();
        };
        taskStatuses.splice(taskStatusesLength-1,1);
        for (var taskStatusesIndex=1;taskStatusesIndex<=taskStatuses.length;taskStatusesIndex++)
        {
            var reasignedDiv='status'+taskStatusesIndex;
            var reasignedLabel='label'+taskStatusesIndex;
            document.getElementById(reasignedDiv).innerHTML="";
            document.getElementById(reasignedDiv).innerHTML='<i class="fa-regular fa-circle-xmark" id="button' +taskStatusesIndex+ '" type="button" onclick="deleteTaskStatus('+taskStatusesIndex+')"></i><label id="label' + taskStatusesIndex + '" name="label' + taskStatusesIndex + '">'+ '\xa0\xa0\xa0' + taskStatuses[taskStatusesIndex-1] +'</label>';
           
        };
        reasignedDiv='status'+taskStatusesIndex;
        document.getElementById(reasignedDiv).remove();
        document.getElementById("taskStatusesArray[]").value=taskStatuses;
    }
</script>




