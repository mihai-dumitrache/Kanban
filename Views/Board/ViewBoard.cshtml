@using Kanban.Models
@using Microsoft.AspNetCore.Http
@using Kanban.Services
@using Kanban.Services.Interfaces
@inject Kanban.Services.Interfaces.IUserServices _userService
@inject Kanban.Services.Interfaces.IBoardServices _boardService
@model Kanban.Models.Board

@*
    Forleftformation on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

<script src="https://kit.fontawesome.com/d5cb6dbe34.js" crossorigin="anonymous"></script>
<script>
function allowDrop(ev) {
  ev.preventDefault();
}

function drag(ev) {
  ev.dataTransfer.setData("text", ev.target.id);
}

function drop(ev) {
  ev.preventDefault();
  var data = ev.dataTransfer.getData("text");
  ev.target.appendChild(document.getElementById(data));
}
</script>

<h1>@ViewData["Board"]</h1>

Board Name: @Html.DisplayFor(model => model.Title) <br />
Board Description: @Html.DisplayFor(model => model.Description) <br />
Board Status: @Html.DisplayFor(model => model.ProjectStatus) <br />
Board Creator: @Html.DisplayFor(model => model.CreatedByUser.Name) <br />
@Html.HiddenFor(model => model.Id, new{id="boardId"})
@Html.HiddenFor(model => model.UserBoards)

<p style="top:23%;left:18%">Only my tasks<input type="checkbox" class="form-check-input" style="top:20%;left:22%" id="myTasks" name="myTasks" value="true" onclick="validate()" /></p>

<div id="allTasks" class="row" style="display:flex" >
   
        @foreach (var statusType in Model.BoardTaskStatuses)
        {
            
            <div class="col" style="border: thin solid black;display:table-group-column">@Html.DisplayFor(model => statusType.Status.StatusName) @*</div>*@
            
            @foreach (var item in Model.TasksList)
            {
                @if (item.Status.Id == statusType.Status.Id)
                {
                    
                    <div class="row" style="border: thin solid black;display:table-group-row">
                        <div class="col" style="display:table-column"  ondrop="drop(event)" ondragover="allowDrop(event)" draggable="true" ondragstart="drag(event)">@Html.DisplayFor(modelitem => item.Title)<br />
                            <p>• @Html.DisplayFor(modelitem => item.Description)</p>
                            <p>• Responsible: @Html.DisplayFor(modelitem => item.Responsible.Name)</p>
                            <i class="fas fa-info-circle"  title="View Details" onclick="location.href='@Url.Action("ViewTask","Task",new {id=item.Id})'"></i>
                        </div>
                    </div>
                    
                }
            }
            </div>
            
        }
</div>


<div id="OwnTasksPartialView">
</div>

<button type="submit" style="background-color: #4CAF60" onclick="location.href='@Url.Action("Index","Task",new {id=Model.Id})'" >Add Task</button>

@{
    var objectTest=new Kanban.Services.UserBoardServices(_userService,_boardService);
}

@if (objectTest.CheckIfAdmin(@Context.Session.GetString("_Email"),@Model.Id)==true)

{
<form asp-controller="User" asp-action="AddUserToBoard" method="post">
    <div class="form-group">
        <label name="userEmail" class="control-label">Add user to board</label>
        <input name="userEmail" class="form-control" type="email" placeholder="Insert User Email" id="userEmail"  />
        <hr><br />
        </div>
@Html.HiddenFor(model => model.Id)
<div class="has-error">
            @Html.ValidationMessage("UserNotFound")
            @Html.ValidationMessage("UserHasAccess")
            </div>
<button type="submit" class="btn btn-default">Add user</button>
</form>
}
else
{}



<script src="~/Scripts/jquery-1.10.2.min.js"></script>

<script type="text/javascript"></script>

<script>
    debugger;
    function validate(){
        var remember = document.getElementById("myTasks");
    $(remember).on('change', function () {
        debugger;
        if (remember.checked)
        {
            
            
            //loading partial view
            var id=@Model.Id;
            document.getElementById("allTasks").style.display="none";
            document.getElementById("OwnTasksPartialView").style.display="block"
            jQuery.ajax({
                url: '@Url.Action("ViewBoardWithLoggedUserTasks", "Board")',
                type: "Get",
                data: {id: id},
                success: function (data) {
                    $("#OwnTasksPartialView").html(data);
                },
                failure: function (errMsg) {
                alert(errMsg);
                }
            });
        }
        else
        {
            debugger;
            var id=@Model.Id;
            document.getElementById("allTasks").style.display="flex"
            document.getElementById("OwnTasksPartialView").style.display="none"
            //window.location='@Url.Action("ViewBoard", "Board")';
            jQuery.ajax({
                url: '@Url.Action("ViewBoard", "Board")',
                type: "Get",
                data: {id: id},
                success: function (data) { 
                debugger;    
                },
                
                failure: function (errMsg) {
                alert(errMsg);
                }
            });
        }
    });
    }

</script>